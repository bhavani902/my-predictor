{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Bhavani\\\\Downloads\\\\my predictor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\Bhavani\\\\Downloads\\\\my predictor\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";/* eslint-disable react/no-array-index-key */import React from'react';import'./PredictionTable.css';import Loading from\"../../loading.svg\";import{columns}from'../../utils/constants';import TableFilter from'../TableFilter/TableFilter';var PredictionTable=function PredictionTable(_ref){var colleges=_ref.colleges,filters=_ref.filters,setFilters=_ref.setFilters,_ref$isLoading=_ref.isLoading,isLoading=_ref$isLoading===void 0?true:_ref$isLoading;var updateFilters=function updateFilters(key,val){var newFilters=_objectSpread(_objectSpread({},filters),{},_defineProperty({},key,val));setFilters(newFilters);};if(isLoading){return/*#__PURE__*/React.createElement(\"div\",{className:\"loading\"},/*#__PURE__*/React.createElement(\"img\",{src:Loading,alt:\"Loading\"}));}return/*#__PURE__*/React.createElement(\"div\",{className:\"college-table\"},/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"colgroup\",null,columns.map(function(col){return/*#__PURE__*/React.createElement(\"col\",{span:\"1\",key:\"col-span-\".concat(col.title),style:col.style});})),/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,columns.map(function(col){return/*#__PURE__*/React.createElement(TableFilter,{title:col.title,data:col.data,property:col.property,key:col.property,value:filters[col.property],updateFilters:updateFilters});}))),/*#__PURE__*/React.createElement(\"tbody\",null,(colleges===null||colleges===void 0?void 0:colleges.length)?colleges.map(function(college,index){return/*#__PURE__*/React.createElement(\"tr\",{key:\"\".concat(index,\"-\").concat(college.institute)},/*#__PURE__*/React.createElement(\"td\",{title:college.institute},college.institute),/*#__PURE__*/React.createElement(\"td\",{title:college.program},college.program),/*#__PURE__*/React.createElement(\"td\",{title:college.quota},college.quota),/*#__PURE__*/React.createElement(\"td\",{title:college.category},college.category),/*#__PURE__*/React.createElement(\"td\",{title:college.seat},college.seat),/*#__PURE__*/React.createElement(\"td\",{title:college.openingRank},college.openingRank),/*#__PURE__*/React.createElement(\"td\",{title:college.closingRank},college.closingRank),/*#__PURE__*/React.createElement(\"td\",{title:college.type},college.type),/*#__PURE__*/React.createElement(\"td\",{title:college.courseDuration},college.courseDuration));}):/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"none-found\",colSpan:columns.length},\"No Colleges found as per filters applied.\")))));};export default PredictionTable;","map":{"version":3,"names":["React","columns","TableFilter","PredictionTable","colleges","filters","setFilters","isLoading","updateFilters","key","val","newFilters","Loading","map","col","title","style","data","property","length","college","index","institute","program","quota","category","seat","openingRank","closingRank","type","courseDuration"],"sources":["C:/Users/Bhavani/Downloads/my predictor/src/components/PredictionTable/PredictionTable.js"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react'\n\nimport './PredictionTable.css'\nimport Loading from '../../loading.svg'\nimport { columns } from '../../utils/constants'\nimport TableFilter from '../TableFilter/TableFilter'\n\nconst PredictionTable = ({\n  colleges, filters,\n  setFilters, isLoading = true,\n}) => {\n  const updateFilters = (key, val) => {\n    const newFilters = {\n      ...filters,\n      [key]: val,\n    }\n    setFilters(newFilters)\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <img\n          src={Loading}\n          alt=\"Loading\"\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"college-table\">\n      <table>\n        <colgroup>\n          {columns.map((col) => (\n            <col\n              span=\"1\"\n              key={`col-span-${col.title}`}\n              style={col.style}\n            />\n          ))}\n        </colgroup>\n        <thead>\n          <tr>\n            {columns.map((col) => (\n              <TableFilter\n                title={col.title}\n                data={col.data}\n                property={col.property}\n                key={col.property}\n                value={filters[col.property]}\n                updateFilters={updateFilters}\n              />\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {colleges?.length ? (colleges).map((college, index) => (\n            <tr key={`${index}-${college.institute}`}>\n              <td title={college.institute}>\n                {college.institute}\n              </td>\n              <td title={college.program}>\n                {college.program}\n              </td>\n              <td title={college.quota}>\n                {college.quota}\n              </td>\n              <td title={college.category}>\n                {college.category}\n              </td>\n              <td title={college.seat}>\n                {college.seat}\n              </td>\n              <td title={college.openingRank}>\n                {college.openingRank}\n              </td>\n              <td title={college.closingRank}>\n                {college.closingRank}\n              </td>\n              <td title={college.type}>\n                {college.type}\n              </td>\n              <td title={college.courseDuration}>\n                {college.courseDuration}\n              </td>\n            </tr>\n          )) : (\n            <tr>\n              <td\n                className=\"none-found\"\n                colSpan={columns.length}\n              >\n                No Colleges found as per filters applied.\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default PredictionTable\n"],"mappings":"+UAAA,6CACA,MAAOA,MAAP,KAAkB,OAAlB,CAEA,MAAO,uBAAP,C,uCAEA,OAASC,OAAT,KAAwB,uBAAxB,CACA,MAAOC,YAAP,KAAwB,4BAAxB,CAEA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,MAGlB,IAFJC,SAEI,MAFJA,QAEI,CAFMC,OAEN,MAFMA,OAEN,CADJC,UACI,MADJA,UACI,qBADQC,SACR,CADQA,SACR,yBADoB,IACpB,gBACJ,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,CAACC,GAAD,CAAMC,GAAN,CAAc,CAClC,GAAMC,WAAU,gCACXN,OADW,wBAEbI,GAFa,CAEPC,GAFO,EAAhB,CAIAJ,UAAU,CAACK,UAAD,CAAV,CACD,CAND,CAQA,GAAIJ,SAAJ,CAAe,CACb,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,2BACE,GAAG,CAAEK,OADP,CAEE,GAAG,CAAC,SAFN,EADF,CADF,CAQD,CAED,mBACE,2BAAK,SAAS,CAAC,eAAf,eACE,8CACE,oCACGX,OAAO,CAACY,GAAR,CAAY,SAACC,GAAD,qBACX,2BACE,IAAI,CAAC,GADP,CAEE,GAAG,oBAAcA,GAAG,CAACC,KAAlB,CAFL,CAGE,KAAK,CAAED,GAAG,CAACE,KAHb,EADW,EAAZ,CADH,CADF,cAUE,8CACE,8BACGf,OAAO,CAACY,GAAR,CAAY,SAACC,GAAD,qBACX,oBAAC,WAAD,EACE,KAAK,CAAEA,GAAG,CAACC,KADb,CAEE,IAAI,CAAED,GAAG,CAACG,IAFZ,CAGE,QAAQ,CAAEH,GAAG,CAACI,QAHhB,CAIE,GAAG,CAAEJ,GAAG,CAACI,QAJX,CAKE,KAAK,CAAEb,OAAO,CAACS,GAAG,CAACI,QAAL,CALhB,CAME,aAAa,CAAEV,aANjB,EADW,EAAZ,CADH,CADF,CAVF,cAwBE,iCACG,CAAAJ,QAAQ,OAAR,EAAAA,QAAQ,SAAR,QAAAA,QAAQ,CAAEe,MAAV,EAAoBf,QAAD,CAAWS,GAAX,CAAe,SAACO,OAAD,CAAUC,KAAV,qBACjC,0BAAI,GAAG,WAAKA,KAAL,aAAcD,OAAO,CAACE,SAAtB,CAAP,eACE,0BAAI,KAAK,CAAEF,OAAO,CAACE,SAAnB,EACGF,OAAO,CAACE,SADX,CADF,cAIE,0BAAI,KAAK,CAAEF,OAAO,CAACG,OAAnB,EACGH,OAAO,CAACG,OADX,CAJF,cAOE,0BAAI,KAAK,CAAEH,OAAO,CAACI,KAAnB,EACGJ,OAAO,CAACI,KADX,CAPF,cAUE,0BAAI,KAAK,CAAEJ,OAAO,CAACK,QAAnB,EACGL,OAAO,CAACK,QADX,CAVF,cAaE,0BAAI,KAAK,CAAEL,OAAO,CAACM,IAAnB,EACGN,OAAO,CAACM,IADX,CAbF,cAgBE,0BAAI,KAAK,CAAEN,OAAO,CAACO,WAAnB,EACGP,OAAO,CAACO,WADX,CAhBF,cAmBE,0BAAI,KAAK,CAAEP,OAAO,CAACQ,WAAnB,EACGR,OAAO,CAACQ,WADX,CAnBF,cAsBE,0BAAI,KAAK,CAAER,OAAO,CAACS,IAAnB,EACGT,OAAO,CAACS,IADX,CAtBF,cAyBE,0BAAI,KAAK,CAAET,OAAO,CAACU,cAAnB,EACGV,OAAO,CAACU,cADX,CAzBF,CADiC,EAAf,CAAnB,cA+BC,2CACE,0BACE,SAAS,CAAC,YADZ,CAEE,OAAO,CAAE7B,OAAO,CAACkB,MAFnB,8CADF,CAhCJ,CAxBF,CADF,CADF,CAuED,CA9FD,CAgGA,cAAehB,gBAAf"},"metadata":{},"sourceType":"module"}