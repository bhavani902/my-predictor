{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhavani\\\\Downloads\\\\my predictor\\\\src\\\\components\\\\CollegePredictor\\\\CollegePredictor.js\";\n\n/* eslint-disable no-bitwise */\nimport React, { useState, useEffect } from 'react';\nimport { getByCategory } from '../../utils/getData';\nimport PredictionTable from '../PredictionTable/PredictionTable';\nimport './CollegePredictor.css';\n\nconst CollegePredictor = () => {\n  const [colleges, setColleges] = useState([]);\n  const [rank, setRank] = useState();\n  const [isLoading, setLoading] = useState(false);\n  const [exam, setExam] = useState('Advanced');\n  const [filters, setFilters] = useState({\n    category: 'OPEN'\n  });\n\n  const filterData = college => {\n    let finalVal = rank <= college.closingRank; // This filter is hardcoded for IIT and Non-IIT\n    // eslint-disable-next-line no-param-reassign\n\n    const dataFilters = { ...filters,\n      type: exam === 'Advanced' ? 'IIT' : ['IIT']\n    };\n    Object.keys(dataFilters).forEach(filter => {\n      // All means skip filter\n      if (dataFilters[filter] !== 'All') {\n        if (dataFilters[filter] instanceof Array) {\n          finalVal &= !dataFilters[filter].includes(college[filter]);\n        } else {\n          finalVal &= college[filter] === dataFilters[filter];\n        }\n      }\n    });\n    return finalVal;\n  };\n\n  const getFilteredColleges = () => new Promise((resolve, _reject) => {\n    const filteredColleges = getByCategory(filters.category).filter(filterData); // using this to prevent 1 second lag, loading is better than lag\n\n    setTimeout(() => {\n      resolve(filteredColleges);\n    }, 1000);\n  });\n\n  const filterColleges = () => {\n    setLoading(true);\n    getFilteredColleges().then(filteredColleges => {\n      setColleges(filteredColleges);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    filterColleges();\n  }, [exam, filters]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-form__inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"JEE\", /*#__PURE__*/React.createElement(\"select\", {\n    value: exam,\n    onChange: e => setExam(e.target.value),\n    className: \"exam-type-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"mains\",\n    value: \"Mains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Mains\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"adv\",\n    value: \"Advanced\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Advanced\")), \"Rank\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    className: \"rank-input\",\n    placeholder: \"Enter your rank here\",\n    value: rank,\n    onChange: e => setRank(parseInt(e.target.value, 10)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: _e => filterColleges(),\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Get Predictions\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dev-links\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Made in Rajasthan by \\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"dev-link\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://github.com/2AMDevs/no-bs-college-predictor/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"2AM Devs\"))), /*#__PURE__*/React.createElement(PredictionTable, {\n    colleges: colleges,\n    filters: filters,\n    setFilters: setFilters,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CollegePredictor;","map":{"version":3,"names":["React","useState","useEffect","getByCategory","PredictionTable","CollegePredictor","colleges","setColleges","rank","setRank","isLoading","setLoading","exam","setExam","filters","setFilters","category","filterData","college","finalVal","closingRank","dataFilters","type","Object","keys","forEach","filter","Array","includes","getFilteredColleges","Promise","resolve","_reject","filteredColleges","setTimeout","filterColleges","then","e","target","value","parseInt","_e"],"sources":["C:/Users/Bhavani/Downloads/my predictor/src/components/CollegePredictor/CollegePredictor.js"],"sourcesContent":["/* eslint-disable no-bitwise */\nimport React, { useState, useEffect } from 'react'\n\nimport { getByCategory } from '../../utils/getData'\nimport PredictionTable from '../PredictionTable/PredictionTable'\nimport './CollegePredictor.css'\n\nconst CollegePredictor = () => {\n  const [colleges, setColleges] = useState([])\n  const [rank, setRank] = useState()\n  const [isLoading, setLoading] = useState(false)\n  const [exam, setExam] = useState('Advanced')\n  const [filters, setFilters] = useState({ category: 'OPEN' })\n\n  const filterData = (college) => {\n    let finalVal = rank <= college.closingRank\n    // This filter is hardcoded for IIT and Non-IIT\n    // eslint-disable-next-line no-param-reassign\n    const dataFilters = {\n      ...filters,\n      type: exam === 'Advanced' ? 'IIT' : ['IIT'],\n    }\n\n    Object.keys(dataFilters)\n      .forEach((filter) => {\n        // All means skip filter\n        if (dataFilters[filter] !== 'All') {\n          if (dataFilters[filter] instanceof Array) {\n            finalVal &= (!dataFilters[filter].includes(college[filter]))\n          } else {\n            finalVal &= (college[filter] === dataFilters[filter])\n          }\n        }\n      })\n    return finalVal\n  }\n\n  const getFilteredColleges = () => new Promise(((resolve, _reject) => {\n    const filteredColleges = getByCategory(filters.category)\n      .filter(filterData)\n\n    // using this to prevent 1 second lag, loading is better than lag\n    setTimeout(() => {\n      resolve(filteredColleges)\n    }, 1000)\n  }))\n\n  const filterColleges = () => {\n    setLoading(true)\n    getFilteredColleges().then((filteredColleges) => {\n      setColleges(filteredColleges)\n      setLoading(false)\n    })\n  }\n\n  useEffect(() => {\n    filterColleges()\n  }, [exam, filters])\n\n  return (\n    <>\n      <div className=\"filter-form\">\n        <div className=\"filter-form__inputs\">\n          JEE\n          <select\n            value={exam}\n            onChange={(e) => setExam(e.target.value)}\n            className=\"exam-type-select\"\n          >\n            <option\n              key=\"mains\"\n              value=\"Mains\"\n            >\n              Mains\n            </option>\n            <option\n              key=\"adv\"\n              value=\"Advanced\"\n            >\n              Advanced\n            </option>\n          </select>\n          Rank\n          <input\n            type=\"number\"\n            className=\"rank-input\"\n            placeholder=\"Enter your rank here\"\n            value={rank}\n            onChange={(e) => setRank(parseInt(e.target.value, 10))}\n          />\n          <button\n            type=\"button\"\n            onClick={(_e) => filterColleges()}\n            className=\"submit-btn\"\n          >\n            Get Predictions\n          </button>\n        </div>\n        <div className=\"dev-links\">\n          Made in Rajasthan by\n          &nbsp;\n          <a\n            className=\"dev-link\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/2AMDevs/no-bs-college-predictor/\"\n          >\n            2AM Devs\n          </a>\n        </div>\n      </div>\n      <PredictionTable\n        colleges={colleges}\n        filters={filters}\n        setFilters={setFilters}\n        isLoading={isLoading}\n      />\n    </>\n  )\n}\n\nexport default CollegePredictor\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}